{"version":3,"file":"static/js/560.41725930.chunk.js","mappings":"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","sources":["pages/EditPage/fields.js","pages/EditPage/EditPage.jsx","shared/helpers/socialLinksCheck.js"],"sourcesContent":["export const fields = {\n\tname: {\n\t\tname: 'name',\n\t\ttype: 'text',\n\t\tlabel: 'Name:',\n\t\ttitle:\n\t\t\t\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n\t\tplaceholder: 'Gregor .....',\n\t\trequired: true,\n\t},\n\tphoneNumber: {\n\t\tname: 'phoneNumber',\n\t\ttype: 'tel',\n\t\tlabel: 'Phone number:',\n\t\ttitle:\n\t\t\t'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n\t\tplaceholder: '+380 .....',\n\t\trequired: true,\n\t},\n\temail: {\n\t\tname: 'email',\n\t\ttype: 'email',\n\t\tlabel: 'Email:',\n\t\ttitle:\n\t\t\t'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n\t\tplaceholder: 'some_body@.....',\n\t},\n\tlinkedin: {\n\t\tname: 'linkedin',\n\t\ttype: 'url',\n\t\tlabel: 'Linkedin:',\n\t\tplaceholder: 'https://www.linkedin.com/in/.....',\n\t},\n\tfacebook: {\n\t\tname: 'facebook',\n\t\ttype: 'url',\n\t\tlabel: 'Facebook:',\n\t\tplaceholder: 'https://www.facebook.com/.....',\n\t},\n\ttelegram: {\n\t\tname: 'telegram',\n\t\ttype: 'url',\n\t\tlabel: 'Telegram:',\n\t\tplaceholder: 'https://t.me/.....',\n\t},\n};\n","import FormField from 'shared/components/FormField/FormField';\nimport Button from 'shared/components/Button/Button';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tselectCurrentContact,\n\tselectContactsGroups,\n} from 'redux/contacts/contactsSelectors';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { editContact } from 'redux/contacts/contactsOperations';\nimport { socialLinksCheck } from 'shared/helpers/socialLinksCheck';\nimport { fetchContactById } from 'redux/contacts/contactsOperations';\nimport { fields } from './fields';\n\nimport {\n\tEditForm,\n\tPositioningWrapperMain,\n\tPositioningGruopWrapper,\n\tGroupLabel,\n\tGroupInput,\n\tGroupSelect,\n\tGroupSpan,\n} from 'modules/ContactForm/ContactForm.styled';\n\nconst EditPage = () => {\n\tconst currentContact = useSelector(selectCurrentContact);\n\tconst [formValues, setFormValues] = useState(null);\n\tconst { id: itemId } = useParams();\n\tconst filter = useSelector(selectFilter);\n\tconst myGroups = useSelector(selectContactsGroups);\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tconst checkedContact = socialLinksCheck(currentContact);\n\n\t\tsetFormValues(checkedContact);\n\t}, [currentContact]);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContactById(itemId));\n\t}, [dispatch, itemId]);\n\n\tif (!currentContact) return;\n\n\tconst handleInputChange = ({ target: { name, value } }) => {\n\t\tswitch (name) {\n\t\t\tcase 'contactsGroupList':\n\t\t\t\treturn (\n\t\t\t\t\tformValues['group'] !== '---' &&\n\t\t\t\t\tsetFormValues(prevState => ({ ...prevState, group: value }))\n\t\t\t\t);\n\t\t\tcase 'linkedin':\n\t\t\t\treturn setFormValues(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tsocialLinks: { ...prevState.socialLinks, [name]: value },\n\t\t\t\t}));\n\t\t\tcase 'facebook':\n\t\t\t\treturn setFormValues(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tsocialLinks: { ...prevState.socialLinks, [name]: value },\n\t\t\t\t}));\n\t\t\tcase 'telegram':\n\t\t\t\treturn setFormValues(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tsocialLinks: { ...prevState.socialLinks, [name]: value },\n\t\t\t\t}));\n\n\t\t\tdefault:\n\t\t\t\treturn setFormValues(prevState => ({ ...prevState, [name]: value }));\n\t\t}\n\t};\n\n\tconst onFormSubmit = async event => {\n\t\ttry {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst editedContact = { ...formValues };\n\n\t\t\tif (!editedContact.group) editedContact.group = '---';\n\n\t\t\tconst { payload } = await dispatch(editContact(editedContact));\n\n\t\t\tif (payload) {\n\t\t\t\tnavigate('/my-contacts');\n\t\t\t} else {\n\t\t\t\talert('Contact with such names is already in your phone book.');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{formValues && !filter && (\n\t\t\t\t<EditForm onSubmit={onFormSubmit}>\n\t\t\t\t\t<PositioningWrapperMain>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\t\t\t\tvalue={formValues.name}\n\t\t\t\t\t\t\t{...fields.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\t\t\t\tvalue={formValues.phoneNumber}\n\t\t\t\t\t\t\t{...fields.phoneNumber}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tvalue={formValues.email}\n\t\t\t\t\t\t\t{...fields.email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PositioningWrapperMain>\n\t\t\t\t\t<PositioningWrapperMain>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tvalue={formValues.linkedin}\n\t\t\t\t\t\t\t{...fields.linkedin}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tvalue={formValues.facebook}\n\t\t\t\t\t\t\t{...fields.facebook}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\tvalue={formValues.telegram}\n\t\t\t\t\t\t\t{...fields.telegram}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PositioningWrapperMain>\n\t\t\t\t\t<PositioningGruopWrapper>\n\t\t\t\t\t\t<GroupLabel>\n\t\t\t\t\t\t\tEnter new group name:\n\t\t\t\t\t\t\t<GroupInput\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"group\"\n\t\t\t\t\t\t\t\tvalue={formValues.group}\n\t\t\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GroupLabel>\n\t\t\t\t\t\t<GroupSpan>or</GroupSpan>\n\t\t\t\t\t\t<GroupLabel>\n\t\t\t\t\t\t\tchoose from the list:\n\t\t\t\t\t\t\t<GroupSelect\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t\t\tname=\"contactsGroupList\"\n\t\t\t\t\t\t\t\tdisabled={formValues.group && formValues.group !== '---' ? true : false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{myGroups.map(group => (\n\t\t\t\t\t\t\t\t\t<option key={group} value={group}>\n\t\t\t\t\t\t\t\t\t\t{group}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</GroupSelect>\n\t\t\t\t\t\t</GroupLabel>\n\t\t\t\t\t</PositioningGruopWrapper>\n\t\t\t\t\t<Button type=\"submit\" text=\"Save changes\" title=\"Save changes\" />\n\t\t\t\t</EditForm>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default EditPage;\n","export const socialLinksCheck = contact => {\n\tif (!contact) return;\n\n\tconst socialLinks = Object.keys(contact.socialLinks);\n\tconst areSocialLinks = Boolean(socialLinks.length);\n\n\tif (!areSocialLinks) {\n\t\treturn {\n\t\t\t...contact,\n\t\t\tsocialLinks: { linkedin: '', facebook: '', telegram: '' },\n\t\t};\n\t}\n\n\treturn contact;\n};\n"],"names":["fields","name","type","label","title","placeholder","required","currentContact","useSelector","selectCurrentContact","useState","formValues","setFormValues","itemId","useParams","id","filter","selectFilter","myGroups","selectContactsGroups","navigate","useNavigate","dispatch","useDispatch","useEffect","checkedContact","contact","socialLinks","Object","keys","Boolean","length","linkedin","facebook","telegram","socialLinksCheck","fetchContactById","handleInputChange","target","value","prevState","group","onFormSubmit","event","preventDefault","editedContact","editContact","payload","alert","console","log","onSubmit","FormField","handleChange","pattern","phoneNumber","email","onChange","disabled","map","Button","text"],"sourceRoot":""}