{"version":3,"file":"static/js/264.7b37e9c9.chunk.js","mappings":"kMAEaA,EAAaC,EAAAA,GAAAA,QAAH,oHASVC,EAAeD,EAAAA,GAAAA,GAAH,6R,UCMzB,EAdgB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,UAACJ,EAAD,YACC,SAACE,EAAD,UAAeC,IACdC,IAGH,C,6NCPYC,EAAiBJ,EAAAA,GAAAA,IAAH,mFAMdK,EAAcL,EAAAA,GAAAA,EAAH,4CAIXM,EAAcN,EAAAA,GAAAA,EAAH,kEAKXO,EAAUP,EAAAA,GAAAA,GAAH,gFAOPQ,EAAYR,EAAAA,GAAAA,OAAH,seA6BTS,GAAYT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,ge,IA6BCA,EAAAA,EAAAA,IAAOQ,EAAPR,CAAH,0H,uBCdpB,EApDoB,SAAC,GAGd,IAAD,IAFLW,QAAWC,EAEN,EAFMA,YAAaC,EAEnB,EAFmBA,mBAAoBC,EAEvC,EAFuCA,GACzCC,GACE,YACCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACC,iCACC,SAACd,EAAD,UAAcO,KACd,UAACR,EAAD,YACC,SAACE,EAAD,UAAcO,KACd,UAACN,EAAD,YAWC,yBACC,SAACE,EAAD,CAAWW,GAAIN,EAAIO,MAAO,CAAEC,KAAMN,GAAYd,MAAM,oBAApD,UACC,SAAC,MAAD,SAGF,yBACC,SAACM,GAAD,gBACCe,KAAK,SACLC,QAAS,kBAAMN,GAASO,EAAAA,EAAAA,IAAcX,GAA7B,EACTZ,MAAM,kBACFa,GAJL,cAMC,SAAC,MAAD,iBAON,ECzDYW,EAAgB1B,EAAAA,GAAAA,EAAH,uICS1B,EARqB,SAAC,GAAiB,IAAf2B,EAAc,EAAdA,QACvB,OAAO,SAACD,EAAD,UAAgBC,GACvB,ECHYC,EAAO5B,EAAAA,GAAAA,GAAH,gYA2BJ6B,EAAW7B,EAAAA,GAAAA,GAAH,scCGrB,EA1BoB,WACnB,IAAM8B,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,GACrBC,EAAmBL,EAASG,QAAO,qBAAGrB,YAC/BwB,cAAcC,SAASJ,EADK,IAGnCK,EAAcC,QAAQJ,EAAiBK,QAEvCC,EAAYN,EAAiBO,KAAI,SAAA/B,GACtC,OACC,SAACkB,EAAD,WACC,SAAC,EAAD,CAAalB,QAASA,EAAS,aAAW,oBAD5BA,EAAQG,GAIxB,IAED,OACC,iCACGwB,IACD,SAAC,EAAD,CAAcX,QAAQ,wCAEtBW,IAAe,SAACV,EAAD,UAAOa,MAGzB,E,UCDD,EAnBqB,WACpB,IAAMX,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBM,EAAcC,QAAQT,EAASU,QAErC,OACC,UAACG,EAAA,EAAD,YACC,UAAC,IAAD,YACGL,IAAe,SAAC,EAAD,CAAcX,QAAQ,+BACtCW,IAAe,SAAC,EAAD,QAEjB,SAAC,IAAD,WACC,SAAC,EAAAM,SAAD,WACC,SAAC,KAAD,UAKJ,C,yGCzBYC,EAAgB7C,EAAAA,GAAAA,IAAH,uCAIb8C,EAAiB9C,EAAAA,GAAAA,IAAH,sC","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactList/ContactItem/ContactItem.styled.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx","pages/ContactsPage/ContactsPage.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AppSection = styled.section`\n\tdisplay: flex;\n\tgap: 20px;\n\n\twidth: 100%;\n\theight: 100%;\n\tpadding-bottom: 15px;\n`;\n\nexport const SectionTitle = styled.h2`\n\tposition: relative;\n\n\tfont-size: 20px;\n\n\t/* ::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tleft: -10px;\n\t\tbottom: -6px;\n\n\t\tdisplay: block;\n\n\t\twidth: calc(100% + 20px);\n\t\theight: 1px;\n\n\t\tbackground-color: #ffffff66;\n\t} */\n`;\n","import PropTypes from 'prop-types';\nimport { AppSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n\treturn (\n\t\t<AppSection>\n\t\t\t<SectionTitle>{title}</SectionTitle>\n\t\t\t{children}\n\t\t</AppSection>\n\t);\n};\n\nSection.propTypes = {\n\ttitle: PropTypes.string,\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ContactWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n\nexport const ContactName = styled.p`\n\tfont-size: 14px;\n`;\n\nexport const PhoneNumber = styled.p`\n\tfont-size: 12px;\n\ttext-align: right;\n`;\n\nexport const BtnList = styled.ul`\n\tdisplay: flex;\n\tgap: 10px;\n\n\tmargin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: #ff4500;\n\t\tbox-shadow: 0px 0px 5px 2px #ff4500;\n\t}\n`;\n\nexport const DetailBtn = styled(Link)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\twidth: 20px;\n\theight: 20px;\n\n\tfont-size: 14px;\n\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\n\topacity: 0.4;\n\n\ttransition: opacity 300ms ease, background-color 300ms ease, color 300ms ease,\n\t\tbox-shadow 300ms ease;\n\n\t:hover,\n\t:focus {\n\t\tcolor: #ffffff;\n\n\t\topacity: 1;\n\t\tbackground-color: blue;\n\t\tbox-shadow: 0px 0px 5px 2px blue;\n\t}\n`;\n\nexport const EditBtn = styled(DeleteBtn)`\n\t:hover,\n\t:focus {\n\t\tbackground-color: green;\n\t\tbox-shadow: 0px 0px 5px 2px green;\n\t}\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\nimport { CgDetailsMore } from 'react-icons/cg';\n// import { BiEditAlt } from 'react-icons/bi';\nimport { deleteContact } from 'redux/contactsSlice';\nimport {\n\tContactWrapper,\n\tContactName,\n\tPhoneNumber,\n\tBtnList,\n\tDeleteBtn,\n\tDetailBtn,\n\t// EditBtn,\n} from './ContactItem.styled';\n\nconst ContactItem = ({\n\tcontact: { contactName, contactPhoneNumber, id },\n\t...allyProps\n}) => {\n\tconst location = useLocation();\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t<ContactName>{contactName}</ContactName>\n\t\t\t<ContactWrapper>\n\t\t\t\t<PhoneNumber>{contactPhoneNumber}</PhoneNumber>\n\t\t\t\t<BtnList>\n\t\t\t\t\t{/* <li>\n\t\t\t\t\t\t<EditBtn\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => dispatch(deleteContact(id))}\n\t\t\t\t\t\t\ttitle=\"Delete contact\"\n\t\t\t\t\t\t\t{...allyProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BiEditAlt />\n\t\t\t\t\t\t</EditBtn>\n\t\t\t\t\t</li> */}\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<DetailBtn to={id} state={{ from: location }} title=\"Show more details\">\n\t\t\t\t\t\t\t<CgDetailsMore />\n\t\t\t\t\t\t</DetailBtn>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<DeleteBtn\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => dispatch(deleteContact(id))}\n\t\t\t\t\t\t\ttitle=\"Delete contact\"\n\t\t\t\t\t\t\t{...allyProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TiUserDeleteOutline />\n\t\t\t\t\t\t</DeleteBtn>\n\t\t\t\t\t</li>\n\t\t\t\t</BtnList>\n\t\t\t</ContactWrapper>\n\t\t</>\n\t);\n};\n\nContactItem.propTypes = {\n\tcontact: PropTypes.shape({\n\t\tcontactName: PropTypes.string.isRequired,\n\t\tcontactPhoneNumber: PropTypes.string.isRequired,\n\t\tid: PropTypes.string.isRequired,\n\t}),\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const NotifyMessage = styled.p`\n\tmin-height: 200px;\n\tmax-height: 200px;\n\n\tmargin-top: 20px;\n\tpadding-top: 30px;\n\n\tfont-size: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { NotifyMessage } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n\treturn <NotifyMessage>{message}</NotifyMessage>;\n};\n\nNotification.propTypes = {\n\tmessage: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n\n\tmax-height: calc(100vh - 62px * 2);\n\n\toverflow-y: scroll;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tbackground-color: #80808054;\n\t\tborder-radius: 2px;\n\t}\n\t/* margin-top: 20px;\n    padding: 0 5px;\n\n    text-align: left;\n\n    \n\n     */\n`;\n\nexport const ListItem = styled.li`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\tpadding: 10px 6px;\n\n\tborder: 1px solid black;\n\tborder-radius: 3px;\n\t/* display: flex;\n    gap: 6px;\n    justify-content: center;\n    align-items: center;\n\n    min-height: 30px;\n    max-height: 30px;\n\n    padding-bottom: 1px;\n\n    border-bottom: 1px solid #ffffff66;\n\n    :not(:first-child) {\n        margin-top: 10px;\n    } */\n`;\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport ContactItem from 'components/ContactList/ContactItem/ContactItem';\nimport Notification from 'components/Notification/Notification';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = () => {\n\tconst contacts = useSelector(getContacts);\n\tconst filter = useSelector(getFilter);\n\tconst filteredContacts = contacts.filter(({ contactName }) =>\n\t\tcontactName.toLowerCase().includes(filter)\n\t);\n\tconst areContacts = Boolean(filteredContacts.length);\n\n\tconst listItems = filteredContacts.map(contact => {\n\t\treturn (\n\t\t\t<ListItem key={contact.id}>\n\t\t\t\t<ContactItem contact={contact} aria-label=\"Delete contact\" />\n\t\t\t</ListItem>\n\t\t);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t{!areContacts && (\n\t\t\t\t<Notification message=\"There is no contact with such name.\" />\n\t\t\t)}\n\t\t\t{areContacts && <List>{listItems}</List>}\n\t\t</>\n\t);\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Section from 'components/Section/Section';\nimport ContactList from 'components/ContactList/ContactList';\nimport Notification from 'components/Notification/Notification';\n\nimport { LeftContainer, RigthContainer } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n\tconst contacts = useSelector(getContacts);\n\tconst areContacts = Boolean(contacts.length);\n\n\treturn (\n\t\t<Section>\n\t\t\t<LeftContainer>\n\t\t\t\t{!areContacts && <Notification message=\"There are no contacts yet.\" />}\n\t\t\t\t{areContacts && <ContactList />}\n\t\t\t</LeftContainer>\n\t\t\t<RigthContainer>\n\t\t\t\t<Suspense>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Suspense>\n\t\t\t</RigthContainer>\n\t\t</Section>\n\t);\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const LeftContainer = styled.div`\n\twidth: 40%;\n`;\n\nexport const RigthContainer = styled.div`\n\twidth: 60%;\n`;\n"],"names":["AppSection","styled","SectionTitle","title","children","ContactWrapper","ContactName","PhoneNumber","BtnList","DeleteBtn","DetailBtn","Link","contact","contactName","contactPhoneNumber","id","allyProps","location","useLocation","dispatch","useDispatch","to","state","from","type","onClick","deleteContact","NotifyMessage","message","List","ListItem","contacts","useSelector","getContacts","filter","getFilter","filteredContacts","toLowerCase","includes","areContacts","Boolean","length","listItems","map","Section","Suspense","LeftContainer","RigthContainer"],"sourceRoot":""}