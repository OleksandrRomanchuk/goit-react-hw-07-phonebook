{"version":3,"file":"static/js/15.0b94c323.chunk.js","mappings":"qPAAaA,EAA0B,CACtCC,MAAO,GACPC,SAAU,ICFLC,EACE,CACNC,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,MAAO,SACPC,YAAa,qBANTL,EAQK,CACTC,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,YACPC,YAAa,S,SCXFC,E,QAAOC,GAAAA,KAAH,mF,SCuCjB,EA9BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,GAA8CC,EAAAA,EAAAA,GAC7CZ,EACAW,EACAE,EAAAA,IAHOC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,cAM7BC,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,IAAkBL,EAAAA,GAAcC,EAChC,GAAE,CAACA,IAEJ,IAAQb,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SAEf,OACC,UAACO,EAAD,CAAME,SAAUK,EAAhB,WACC,SAACG,EAAA,GAAD,QAAWJ,aAAcA,EAAcK,MAAOnB,GAAWE,KACzD,SAACgB,EAAA,GAAD,QACCJ,aAAcA,EACdK,MAAOlB,GACHC,KAEL,SAACkB,EAAA,EAAD,CAAQjB,KAAK,SAASkB,KAAK,SAASC,MAAM,aAG5C,ECrBD,EAVkB,WAOjB,OAAO,SAAC,EAAD,CAAWZ,SAJQ,SAAAa,GAEzB,GAGD,C,6GCTYZ,EAAU,SAACa,EAAcd,EAAUe,GAC/C,OAA0BC,EAAAA,EAAAA,WACzB,mCAAMC,EAAAA,EAAAA,IAAoBF,UAA1B,mBAA0CD,EAA1C,IADD,eAAOX,EAAP,KAAce,EAAd,KAgBA,MAAO,CAAEf,MAAAA,EAAOe,SAAAA,EAAUd,aAZL,SAAC,GAAgB,IAAde,EAAa,EAAbA,OACfzB,EAAgByB,EAAhBzB,KAAMe,EAAUU,EAAVV,MACdS,GAAS,SAAAE,GAAS,yBAAUA,GAAV,cAAsB1B,EAAOe,GAA7B,GAClB,EASuCJ,aAPnB,SAAAgB,GACpBA,EAAMC,iBAENtB,GAAS,UAAKG,IACde,GAAS,UAAKJ,GACd,EAGD,C","sources":["modules/LoginForm/initialsLoginFormValues.js","modules/LoginForm/fields.js","modules/LoginForm/LoginForm.styled.jsx","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/hooks/useForm.jsx"],"sourcesContent":["export const initialsLoginFormValues = {\n\temail: '',\n\tpassword: '',\n};\n","const fields = {\n\temail: {\n\t\ttype: 'email',\n\t\tname: 'email',\n\t\trequired: true,\n\t\tlabel: 'Email:',\n\t\tplaceholder: 'somebody@mail.com',\n\t},\n\tpassword: {\n\t\ttype: 'password',\n\t\tname: 'password',\n\t\trequired: true,\n\t\tlabel: 'Password:',\n\t\tplaceholder: '*****',\n\t},\n};\n\nexport { fields };\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport FormField from 'shared/components/FormField/FormField';\nimport Button from 'shared/components/Button/Button';\nimport { useEffect } from 'react';\nimport { useForm } from 'shared/hooks/useForm';\nimport { saveDataToLocalSt, loginFormLSK } from 'shared/helpers/localStfunc';\nimport { initialsLoginFormValues } from './initialsLoginFormValues';\nimport { fields } from './fields';\n\nimport { Form } from './LoginForm.styled';\n\nconst LoginForm = ({ onSubmit }) => {\n\tconst { state, handleChange, onFormSubmit } = useForm(\n\t\tinitialsLoginFormValues,\n\t\tonSubmit,\n\t\tloginFormLSK\n\t);\n\n\tuseEffect(() => {\n\t\tsaveDataToLocalSt(loginFormLSK, state);\n\t}, [state]);\n\n\tconst { email, password } = state;\n\n\treturn (\n\t\t<Form onSubmit={onFormSubmit}>\n\t\t\t<FormField handleChange={handleChange} value={email} {...fields.email} />\n\t\t\t<FormField\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tvalue={password}\n\t\t\t\t{...fields.password}\n\t\t\t/>\n\t\t\t<Button type=\"submit\" text=\"Log in\" title=\"Log in\" />\n\t\t</Form>\n\t);\n};\n\nLoginForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import LoginForm from 'modules/LoginForm/LoginForm';\n// import { useDispatch } from 'react-redux';\n// import { authLogin } from 'redux/auth/operation';\n\nconst LoginPage = () => {\n\t// const dispatch = useDispatch();\n\n\tconst onLoginFormSubmit = credentials => {\n\t\t// dispatch(authLogin(credentials));\n\t};\n\n\treturn <LoginForm onSubmit={onLoginFormSubmit} />;\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\nimport { loadDataFromLocalSt } from 'shared/helpers/localStfunc';\n\nexport const useForm = (initialState, onSubmit, LS_KEY) => {\n\tconst [state, setState] = useState(\n\t\t() => loadDataFromLocalSt(LS_KEY) ?? { ...initialState }\n\t);\n\n\tconst handleChange = ({ target }) => {\n\t\tconst { name, value } = target;\n\t\tsetState(prevState => ({ ...prevState, [name]: value }));\n\t};\n\n\tconst onFormSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\tonSubmit({ ...state });\n\t\tsetState({ ...initialState });\n\t};\n\n\treturn { state, setState, handleChange, onFormSubmit };\n};\n"],"names":["initialsLoginFormValues","email","password","fields","type","name","required","label","placeholder","Form","styled","onSubmit","useForm","loginFormLSK","state","handleChange","onFormSubmit","useEffect","saveDataToLocalSt","FormField","value","Button","text","title","credentials","initialState","LS_KEY","useState","loadDataFromLocalSt","setState","target","prevState","event","preventDefault"],"sourceRoot":""}