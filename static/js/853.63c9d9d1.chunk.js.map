{"version":3,"file":"static/js/853.63c9d9d1.chunk.js","mappings":"oMAuCA,UAlCyB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,MASXC,EAR0BL,EAASM,QAAO,SAAAC,GAC/C,OAAIA,EAAQC,gBAAkBT,GAIvBQ,CACP,IAEwCE,KACxC,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,mBAApB,OACC,2BACC,uBAAID,KACJ,uBAAIC,KACJ,SAAC,KAAD,CACCC,GAAE,uBAAkBH,EAAlB,YACFI,MAAO,CAAEC,KAAMZ,GACfa,MAAM,oBAHP,4BAHQN,EADV,IAeD,OAAO,wBAAKL,GACZ,C","sources":["components/GroupContactList/GroupContactList.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst GroupContactList = ({ group }) => {\n\tconst contacts = useSelector(selectContacts);\n\tconst location = useLocation();\n\tconst filteredContactsByGroup = contacts.filter(contact => {\n\t\tif (contact.contactsGroup !== group) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn contact;\n\t});\n\n\tconst elements = filteredContactsByGroup.map(\n\t\t({ id, contactName, contactPhoneNumber }) => (\n\t\t\t<li key={id}>\n\t\t\t\t<p>{contactName}</p>\n\t\t\t\t<p>{contactPhoneNumber}</p>\n\t\t\t\t<Link\n\t\t\t\t\tto={`/my-contacts/${id}/details`}\n\t\t\t\t\tstate={{ from: location }}\n\t\t\t\t\ttitle=\"Show more details\"\n\t\t\t\t>\n\t\t\t\t\tShow details\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t)\n\t);\n\n\treturn <ul>{elements}</ul>;\n};\n\nGroupContactList.propTypes = {\n\tgroup: PropTypes.string.isRequired,\n};\n\nexport default GroupContactList;\n"],"names":["group","contacts","useSelector","selectContacts","location","useLocation","elements","filter","contact","contactsGroup","map","id","contactName","contactPhoneNumber","to","state","from","title"],"sourceRoot":""}